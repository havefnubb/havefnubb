Installing the jCommunity Module


Copying files
-------------

Copy the jcommunity module in your application or anywhere. Verify that the module repository where it is installed is declared into modulePath property in the general configuration of your application.


About the jauth and jauthdb module
----------------------------------

You should do nothing about it, uninstall and deactivate them.


Configuration for jelix 1.1 applications
------------------------------------------------

in the defaultconfig.ini.php:
- if you have checkTrustedModules=on, you should add jcommunity module in trustedModules.
- Configure all parameters in the mailer section. jCommunity needs to send mail to users.

if you use significant urls, you have an example of urls setting into the urls_example.xml. Copy its content
into the urls.xml file of your application.

execute the install.mysql.sql script on your database. It creates a `community_users` table.
If you have already a table of users, you can add new fields of community_users in your table.
You should then override all DAOs of the jcommunity module to change the fieldname and the table.

*** Activation of the auth coordplugin

You must activate the auth coordplugin in your configuration. Inside your config.ini.php:

    [coordplugins]
    auth = auth.coord.ini.php

And copy the auth.coord.ini.php provided in the jcommunity module, install/var/config/auth.coord.ini.php

In this ini file, you should at least change the values of this properties :

    persistant_crypt_key=  "INSERT HERE A SENTENCE"

Configuration for jelix 1.2 applications
------------------------------------------------

in the defaultconfig.ini.php:
- Configure all parameters in the mailer section. jCommunity needs to send mail to users.

if you use significant urls, link urls_account.xml, urls_auth.xml and urls_registration.xml to the main urls.xml of the application

        <url pathinfo="/auth"     module="jcommunity" include="urls_auth.xml"/>
        <url pathinfo="/profile"  module="jcommunity" include="urls_account.xml"/>
        <url pathinfo="/registration"  module="jcommunity" include="urls_registration.xml"/>

Install the module (installmodule command), it then creates a `community_users` table.
If you have already a table of users, you can add new fields of community_users in your table.
You should then override all DAOs of the jcommunity module to change the fieldname and the table.

*** Activation of the auth coordplugin

the auth coordplugin is automatically activated in your configuration.
In the ini file yourapp/var/config/auth.coord.ini.php, you should at least
change the values of this properties : 

    persistant_crypt_key=  "INSERT HERE A SENTENCE"

Integration into your application
---------------------------------

You can integrate the "status" zone into your main template (directly into the template or via your main response).
  $response->body->assignZone('STATUS', 'jcommunity~status');

It show links to the login form, the register form if the user isn't authenticated, or to the logout page and account page if he is authenticated.

Integration into administration
-------------------------------

If you have a admin application, using jauthdb_admin, indicate into the auth.coord.ini.php
of the application the form jcommunity~account_admin

